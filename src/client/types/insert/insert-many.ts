// Copyright DataStax, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import { IdOf } from '@/src/client/types/utils';

/** @internal */
export interface InsertManyCommand {
  insertMany: {
    documents: unknown[],
    options?: {
      ordered?: boolean,
    },
  }
}

/**
 * Options for insertMany.
 *
 * The parameters depend on the `ordered` option. If `ordered` is `true`, the `parallel` option is not allowed.
 */
export type InsertManyOptions =
  | InsertManyUnorderedOptions
  | InsertManyOrderedOptions;

/**
 * Options for insertMany when `ordered` is `true`.
 */
export interface InsertManyOrderedOptions {
  /**
   * If `true`, the documents are inserted in the order provided. If an error occurs, the operation stops and the
   * remaining documents are not inserted.
   */
  ordered: true,
  /**
   * The number of documents to upload per request
   */
  chunkSize?: number,
}

/**
 * Options for insertMany when `ordered` is `false`.
 */
export interface InsertManyUnorderedOptions {
  /**
   * If `false`, the documents are inserted in an arbitrary order. If an error occurs, the operation does not stop
   * and the remaining documents are inserted. This allows the operation to be parallelized for better performance.
   */
  ordered?: false,
  /**
   * The number of concurrent requests to use
   */
  parallel?: number,
  /**
   * The number of documents to upload per request
   */
  chunkSize?: number,
}

/** @internal */
export const insertManyOptionKeys = new Set(['ordered']);

/**
 * Represents the result of an insertMany command.
 *
 * @field insertedIds - The IDs of the inserted documents.
 * @field insertedCount - The number of inserted documents.
 */
export interface InsertManyResult<Schema> {
  /**
   * The IDs of the inserted documents (including the autogenerated IDs).
   */
  insertedIds: IdOf<Schema>[];
  /**
   * The number of inserted documents (equals `insertedIds.length`).
   */
  insertedCount: number;
}
